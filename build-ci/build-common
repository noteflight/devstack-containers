#!/bin/bash

# Build the docker image then push it to the docker repo, presumably
# an ECR repo.  The image is tagged in three ways:
#
#   latest
#   branch-{branch name}
#   branch-{branch name}-commit-{short commit}
#
# Args:
#
# $1: context directory (with Dockerfile at root)
# $2: local image name
# $3: ECR image name
#
# This will use whatever default 
build_container () {
    CONTEXT_DIR=$1
    IMAGE_TAG=$2
    REGISTRY_SERVER="915434789528.dkr.ecr.us-east-1.amazonaws.com"
    REPO_URL="${REGISTRY_SERVER}/${3}"
    GIT_BRANCH=`git rev-parse --abbrev-ref HEAD`
    GIT_COMMIT=`git rev-parse HEAD`
    GIT_SHORT_COMMIT=`git rev-parse --short HEAD`
    SHORT_TAG="${REPO_URL}:branch-${GIT_BRANCH}"
    LONG_TAG="${REPO_URL}:branch-${GIT_BRANCH}-commit-${GIT_SHORT_COMMIT}"
    LATEST_TAG="${REPO_URL}:latest"
    
    echo "Building container ${IMAGE_TAG}, branch ${GIT_BRANCH}, commit ${GIT_COMMIT} (short ${GIT_SHORT_COMMIT})"

    docker build --no-cache -t ${IMAGE_TAG} ${CONTEXT_DIR}
    echo "Tagging as ${SHORT_TAG}"
    docker tag ${IMAGE_TAG} ${SHORT_TAG}
    echo "Tagging as ${LONG_TAG}"
    docker tag ${IMAGE_TAG} ${LONG_TAG}
    echo "Tagging as ${LATEST_TAG}"
    docker tag ${IMAGE_TAG} ${LATEST_TAG}

    echo "Docker login to AWS ECR"
    aws ecr get-login-password | docker login -u AWS --password-stdin ${REGISTRY_SERVER}
    
    echo "Pushing images"
    docker push ${SHORT_TAG}
    docker push ${LONG_TAG}
    docker push ${LATEST_TAG}
}
